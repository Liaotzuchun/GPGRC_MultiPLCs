<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ControlTemplate x:Key="ExpanderToggleButton"
                     TargetType="ToggleButton">
        <Border Name="Border"
                Background="{StaticResource NormalBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1"
                CornerRadius="0,0,0,0">
            <Path Name="Arrow"
                  Margin="10,0,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{StaticResource GlyphBrush}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.12" />
                        <VisualTransition GeneratedDuration="0"
                                          To="Checked" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource DarkBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource DarkBorderBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource PressedBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource PressedBorderBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="Background.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource DisabledBackgroundBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush.Color">
                                <EasingColorKeyFrame KeyTime="0"
                                                     Value="{Binding Source={StaticResource DisabledBorderBrush}, Path=Color}" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Name="ContentRow"
                                           Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Name="Border"
                                Grid.Row="0"
                                CornerRadius="0,0,0,0">
                            <Grid>
                                <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>-->
                                <ToggleButton FocusVisualStyle="{x:Null}"
                                              IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              OverridesDefaultStyle="True"
                                              Template="{StaticResource ExpanderToggleButton}" />
                                <ContentPresenter Margin="8,4"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Header"
                                                  IsHitTestVisible="False"
                                                  RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border Name="Content"
                                Grid.Row="1"
                                CornerRadius="0,0,0,0"
                                Opacity="0">
                            <Border.LayoutTransform>
                                <ScaleTransform x:Name="st"
                                                ScaleY="0" />
                            </Border.LayoutTransform>
                            <ContentPresenter />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Expander.Expanded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="st"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.27">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation BeginTime="0:0:0.27"
                                                     Storyboard.TargetName="Content"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:0.33">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Expander.Collapsed">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation BeginTime="0:0:0.27"
                                                     Storyboard.TargetName="st"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.33">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="Content"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1"
                                                     To="0"
                                                     Duration="0:0:0.27">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--</SnippetExpander>-->
</ResourceDictionary>