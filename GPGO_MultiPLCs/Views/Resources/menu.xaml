<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style
        x:Key="{x:Type Menu}"
        TargetType="{x:Type Menu}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{x:Null}">
                        <UniformGrid
                            ClipToBounds="True"
                            IsItemsHost="True"
                            Rows="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Name="Border"
                        Background="{StaticResource WindowBackgroundBrush2}"
                        BorderBrush="{x:Null}"
                        BorderThickness="1">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="True">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style
        x:Key="MenuScrollButton"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClickMode" Value="Hover" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        x:Name="Border"
                        Background="{StaticResource WindowBackgroundBrush6}"
                        BorderBrush="{StaticResource WindowBackgroundBrush4}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            x:Name="ContentContainer"
                            Margin="4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="MenuScrollViewer"
        BasedOn="{x:Null}"
        TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <RepeatButton
                            Grid.Row="0"
                            Grid.Column="0"
                            BorderThickness="0,0,0,1"
                            Command="{x:Static ScrollBar.LineUpCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="0"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding
                                        Path="ComputedVerticalScrollBarVisibility"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="VerticalOffset"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="ExtentHeight"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="ViewportHeight"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path
                                Data="{StaticResource UpArrow}"
                                Fill="{StaticResource BaseForeground}" />
                        </RepeatButton>
                        <Border
                            Grid.Row="1"
                            Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                        <RepeatButton
                            Grid.Row="2"
                            Grid.Column="0"
                            BorderThickness="0,1,0,0"
                            Command="{x:Static ScrollBar.LineDownCommand}"
                            CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                            Focusable="False"
                            Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding
                                    Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                    ConverterParameter="100"
                                    FallbackValue="Visibility.Collapsed">
                                    <Binding
                                        Path="ComputedVerticalScrollBarVisibility"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="VerticalOffset"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="ExtentHeight"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding
                                        Path="ViewportHeight"
                                        RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path
                                Data="{StaticResource DownArrow}"
                                Fill="{StaticResource BaseForeground}" />
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style
        x:Key="{x:Static MenuItem.SeparatorStyleKey}"
        TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border
                        BorderBrush="{StaticResource WindowBackgroundBrush4}"
                        BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate
        x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            Background="{StaticResource WindowBackgroundBrush6}">
            <Grid>
                <ContentPresenter
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <Popup
                    Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Center"
                    PopupAnimation="Fade">
                    <Border
                        Name="SubmenuBorder"
                        Margin="15"
                        Background="{StaticResource LightColorBrush}"
                        BorderBrush="{StaticResource WindowBackgroundBrush4}"
                        BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect
                                BlurRadius="15"
                                Direction="270"
                                Opacity="0.25" />
                        </Border.Effect>
                        <ScrollViewer
                            MaxHeight="470"
                            CanContentScroll="True"
                            Style="{StaticResource MenuScrollViewer}">
                            <StackPanel
                                IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                    <Popup.VerticalOffset>
                        <MultiBinding
                            Converter="{StaticResource SumValueConverter}"
                            ConverterParameter="4">
                            <Binding
                                Converter="{StaticResource RatioValue}"
                                ConverterParameter="0.5"
                                ElementName="SubmenuBorder"
                                Path="ActualHeight" />
                            <Binding
                                Converter="{StaticResource RatioValue}"
                                ConverterParameter="0.5"
                                ElementName="Border"
                                Path="ActualHeight" />
                        </MultiBinding>
                    </Popup.VerticalOffset>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger
                RoutedEvent="MouseLeave"
                SourceName="Popup">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsSubmenuOpen">
                                <DiscreteBooleanKeyFrame
                                    KeyTime="0:0:0"
                                    Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LightColorBrush}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid MinWidth="60">
                <ContentPresenter
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border>
            <Grid MinWidth="60">
                <Grid.Background>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <GradientStop Offset="0" Color="{Binding Color, Source={StaticResource LightColorBrush}}" />
                        <GradientStop Offset="1" Color="{Binding Color, Source={StaticResource WindowBackgroundBrush6}}" />
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Check"
                    Width="8"
                    Background="{StaticResource WindowBackgroundBrush4}"
                    Visibility="Collapsed">
                    <Border
                        x:Name="CheckMark"
                        Background="Cyan"
                        Opacity="0" />
                </Border>
                <Border
                    x:Name="Border2"
                    Grid.Column="1"
                    Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0.25" Color="{Binding Color, Source={StaticResource LightColorBrush}}" />
                            <GradientStop Offset="1.25" Color="{Binding Color, Source={StaticResource WorkingBrush}}" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Border
                    x:Name="Border3"
                    Grid.Column="1"
                    Opacity="0">
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Offset="0.5" Color="{Binding Color, Source={StaticResource LightColorBrush}}" />
                            <GradientStop Offset="1.5" Color="{Binding Color, Source={StaticResource WindowBackgroundBrush6}}" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border2" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border3" Property="Opacity" Value="1" />
                <Setter TargetName="CheckMark" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate
        x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
        TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition
                        Width="Auto"
                        SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Popup
                    Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade">
                    <Border
                        Name="SubmenuBorder"
                        Background="{StaticResource LightColorBrush}"
                        BorderBrush="{StaticResource WindowBackgroundBrush4}"
                        BorderThickness="1">
                        <ScrollViewer
                            CanContentScroll="True"
                            Style="{StaticResource MenuScrollViewer}">
                            <StackPanel
                                IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z"
                    Fill="{StaticResource GlyphBrush}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style
        x:Key="{x:Type MenuItem}"
        TargetType="{x:Type MenuItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{StaticResource BaseForeground}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Background="Transparent"
                        BorderBrush="{StaticResource WindowBackgroundBrush4}"
                        BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}">
                        <ContentPresenter
                            Margin="8,4"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{Binding Mode=OneWay}"
                            TextElement.FontSize="14" />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="UsesItemContainerTemplate" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>